# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
        - name: Setup Node.js environment
  uses: actions/setup-node@v1.4.1
  with:
    # Set always-auth in npmrc
    always-auth: # optional, default is false
    # Version Spec of the version to use.  Examples: 10.x, 10.15.1, >=10.15.0
    node-version: # optional, default is 10.x
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN
    registry-url: # optional
    # Optional scope for authenticating against scoped registries
    scope: # optional
    # Deprecated. Use node-version instead. Will not be supported after October 1, 2019
    version: # optional
- name: Setup Java JDK
  uses: actions/setup-java@v1.3.0
  with:
    # The Java version to make available on the path. Takes a whole or semver Java version, or 1.x syntax (e.g. 1.8 => Java 8.x)
    java-version: 
    # The package type (jre, jdk, jdk+fx)
    java-package: # optional, default is jdk
    # The architecture (x86, x64) of the package.
    architecture: # optional, default is x64
    # Path to where the compressed JDK is located. The path could be in your source repository or a local path on the agent.
    jdkFile: # optional
    # ID of the distributionManagement repository in the pom.xml file. Default is `github`
    server-id: # optional
    # Environment variable name for the username for authentication to the Apache Maven repository. Default is $GITHUB_ACTOR
    server-username: # optional
    # Environment variable name for password or token for authentication to the Apache Maven repository. Default is $GITHUB_TOKEN
    server-password: # optional
    # Path to where the settings.xml file will be written. Default is ~/.m2.
    settings-path: # optional
    - name: Close Stale Issues
  uses: actions/stale@1.0.0
  with:
    # Token for the repo. Can be passed in using {{ secrets.GITHUB_TOKEN }}
    repo-token: 
    # The message to post on the issue when tagging it. If none provided, will not mark iusses stale.
    stale-issue-message: # optional
    # The message to post on the pr when tagging it. If none provided, will not mark prs stale.
    stale-pr-message: # optional
    # The number of days old an issue can be before marking it stale
    days-before-stale: # optional, default is 60
    # The number of days to wait to close an issue or pr after it being marked stale
    days-before-close: # optional, default is 7
    # The label to apply when an issue is stale
    stale-issue-label: # optional, default is Stale
    # The label to apply when a pr is stale
    stale-pr-label: # optional, default is Stale
    # The maximum number of operations per run, used to control rate limiting
    operations-per-run: # optional, default is 30
    - name: Setup .NET Core SDK
  uses: actions/setup-dotnet@v1.4.0
  with:
    # SDK version to use. Example: 2.2.104
    dotnet-version: # optional
    # Optional package source for which to set up authentication. Will consult any existing NuGet.config in the root of the repo and provide a temporary NuGet.config using the NUGET_AUTH_TOKEN environment variable as a ClearTextPassword
    source-url: # optional
    # Optional OWNER for using packages from GitHub Package Registry organizations/users other than the current repository's owner. Only used if a GPR URL is also provided in source-url
    owner: # optional
    # Optional NuGet.config location, if your NuGet.config isn't located in the root of the repo.
    config-file: # optional
    # Deprecated. Use dotnet-version instead. Will not be supported after October 1, 2019
    version: # optional
    - name: Download artifact
  uses: actions/download-artifact@v1.0.0
  with:
    # Artifact name
    name: 
    # Destination path
    path: # optional
    
